{% extends '::base.html.twig' %}
{% import 'OnCallAdminBundle:CallLog:log.html.twig' as log_row %}

{% block plugins %}
<script src="assets/plugins/bootstrap-daterangepicker/date.js" type="text/javascript"></script>
<script src="assets/plugins/bootstrap-daterangepicker/daterangepicker.js" type="text/javascript"></script> 
<script src="assets/plugins/highcharts/highcharts.js" type="text/javascript"></script>
<script src="assets/plugins/highcharts/modules/exporting.js" type="text/javascript"></script>
<script src="/assets/scripts/autobahn.min.js"></script>
{% endblock %}

{% block javascript %}
{% block ajax_update_item %}
<script type="text/javascript">
    function update_item(data)
    {
        $('.item_name').val(data.name);
        $('.item_name_text').html(data.name);
        $('.item_delete_button').html('Delete All Data for: ' + data.name);
        $('.item_status').val(data.status);
    }
</script>
{% endblock %}

<script>
// functions
function campaign_set(campaign_id, adgroup_id, advert_id)
{
    var url = '/campaign/' + campaign_id + '/adgroups/dropdown';
    $.get(url, function(data) {
        var options = '<option value=""></option>';
        for (var i = 0; i < data.length; i++)
            options += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
        $('#filter_adgroup').html(options);
        $('#container_adgroup').removeClass('hidden');
        if (adgroup_id != null)
        {
            $('#filter_adgroup').val(adgroup_id);
            adg_set(adgroup_id, advert_id);
        }
    }, 'json');
}

function adg_set(adgroup_id, advert_id)
{
    var url = '/adgroup/' + adgroup_id + '/adverts/dropdown';
    $.get(url, function(data) {
        var options = '<option value=""></option>';
        for (var i = 0; i < data.length; i++)
            options += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
        $('#filter_advert').html(options);
        $('#container_advert').removeClass('hidden');
        if (advert_id != null)
        {
            $('#filter_advert').val(advert_id);
        }
    }, 'json');
}

function filter_get()
{
    return {{ filter_json|raw }};
}

function filter_check(log)
{
    var filter = filter_get();

    // campaign
    if (filter.campaign_id != null)
    {
        if (filter.campaign_id != log.campaign_id)
            return false;

        // adgroup
        if (filter.adgroup_id != null)
        {
            if (filter.adgroup_id != log.adgroup_id)
                return false;

            // advert
            if (filter.advert_id != null)
            {
                if (filter.advert_id != log.advert_id)
                    return false;
            }
        }
    }

    // hangup cause
    if (filter.hangup_cause != null && filter.hangup_cause != log.hangup_cause)
        return false;

    // duration
    if (filter.duration_secs != null)
    {
        switch (filter.duration_mod)
        {
            case 'less':
                if (log.duration >= filter.duration_secs)
                    return false;
                break;
            case 'greater':
                if (log.duration <= filter.duration_secs)
                    return false;
                break;
            case 'equal':
                if (log.duration != filter.duration_secs)
                    return false;
                break;
            default:
                return false;
        }
    }

    // number
    if (filter.number != null)
    {
        if (log.dialled_number.indexOf(filter.number) == -1)
            return false;
    }

    // failed
    if (filter.failed)
    {
        switch(log.status)
        {
            case 'ringing':
            case 'in-progress':
            case 'completed':
                return false;
        }
    }

    // all clear
    return true;
}

function logtable_add(log)
{
    if (!filter_check(log))
    {
        console.log('failed filter check');
        return;
    }

    // console.log(log);

    var log_id = 'log_' + log.call_id;

    var cols = '<td class="callLogDate">';
    cols += '<strong>' + log.date_start.date + '</strong><br />';
    cols += '<small>' + log.date_start.time + '</small><br />';
    cols += '</td>';

    cols += '<td class="callLogCaller">';
    cols += '<strong>' + log.origin_formatted + '</strong>';
    cols += '</td>';

    cols += '<td class="callLogDestination">';
    cols += '<strong>' + log.dialled_formatted + '</strong><br />';
    cols += '<a href="client/' + log.client_id + '/campaigns">' + log.campaign_name + '</a> &raquo; ';
    cols += '<a href="campaign/' + log.campaign_id + '/adgroups">' + log.adgroup_name + '</a> &raquo; ';
    cols += '<a href="adgroup/' + log.adgroup_id + '/adverts">' + log.advert_name + '</a>';
    cols += '</td>';

    if (log.failed) {
        cols += '<td class="callLogResult callLogRed"><br />';
        cols += '<strong>' + log.destination_formatted + '</strong><br />';
        cols += '<small>' + log.hangup_cause + '<br />';
        cols += log.b_hangup_cause + '</small>';
        cols += '</td>';
    }
    else {
        cols += '<td class="callLogResult callLogGreen"><br />';
        cols += '<strong>' + log.destination_formatted + '</strong><br />';
        cols += '<small>' + log.hangup_cause + '<br />';
        cols += 'Call Duration: ' + log.duration + '</small>';
        cols += '</td>';
    }

    var row = '<tr class="log_row" data-id="' + log_id + '" id="' + log_id + '" style="display: none;">' + cols + '</tr>';

    // check if row already exists
    if ($('#' + log_id).length > 0)
    {
        $('#' + log_id).html(cols);
    }
    else
    {
        // add updated rows 
        $(row).prependTo('#logbody').fadeIn('slow');
    }
}

function log_more()
{
    var filter = filter_get();
    var last_id = $('.log_row').last().data('id');
    var url = '/client/{{ client.getID }}/call_log/more/' + last_id;
    
    if (filter.campaign_id == null)
        url += '?cid=';
    else
        url += '?cid=' + filter.campaign_id;

    if (filter.adgroup_id == null)
        url += '&agid=';
    else
        url += '&agid=' + filter.adgroup_id;

    if (filter.advert_id == null)
        url += '&adid=';
    else
        url += '&adid=' + filter.advert_id;

    if (filter.hangup_cause == null)
        url += '&hcause=';
    else
        url += '&hcause=' + filter.hangup_cause;

    url += '&dmod=' + filter.duration_mod;

    if (filter.duration_secs == null)
        url += '&dsec=';
    else
        url += '&dsec=' + filter.duration_secs;

    if (filter.number == null)
        url += '&num=';
    else
        url += '&num=' + filter.number;

    if (filter.failed)
        url += '&failed=1';

    url += '&dts=' + filter.dts;
    url += '&dte=' + filter.dte;

    // console.log(url);
    $.get(url, function(data) {
        $('#logbody').append(data);
    });
}

// startup
jQuery(document).ready(function() {
    // START websocket connection
    console.log('connecting to websocket server');
    var conn = new ab.Session(
        'ws://{{ app.request.host }}:8080',
        function() { // connect
            console.log('connected');
            conn.subscribe('client:{{ client.getID }}', function(topic, data) {
                var action_type = data.type;
                var log = data.logentry;
                if (action_type == 'log')
                {
                    // console.log(log);
                    logtable_add(log);
                }
                else if (action_type == 'callback')
                {
                    logtable_add(log);
                }
            });
        },
        function() { // close
            console.warn('WebSocket connection closed');
        },
        { // extra parameters
            'skipSubprotocolCheck': true
        }
    );
    // END websocket

    // START filter dropdowns
    // campaign
    $('#filter_campaign').change(function() {
        var campaign_id = $(this).val();
        if (campaign_id == '')
        {
            $('#filter_adgroup').html('<option value=""></option>');
            $('#container_adgroup').val('');
            $('#container_adgroup').addClass('hidden');

            $('#filter_advert').html('<option value=""></option>');
            $('#container_advert').val('');
            $('#container_advert').addClass('hidden');
        }
        else
        {
            campaign_set(campaign_id);
        }
    });

    // ad group
    $('#filter_adgroup').change(function() {
        var adgroup_id = $(this).val();
        if (adgroup_id == '')
        {
            $('#filter_advert').html('<option value=""></option>');
            $('#container_advert').val('');
            $('#container_advert').addClass('hidden');
        }
        else
        {
            adg_set(adgroup_id);
        }
    });

    // check existing filters
    {% if filter.getCID != null %}
    campaign_set({{ filter.getCID }}, {{ filter.getAGID ? filter.getAGID : 'null'}}, {{ filter.getAdID ? filter.getAdID : 'null' }});
    {% endif %}
    // END filter dropdowns

    // BEGIN more button
    $('#more_button').click(log_more);
    // END more button

    // BEGIN date range
    var date_from = new Date({{ filter.getDTSUTC }});
    var date_to = new Date({{ filter.getDTEUTC }});

    $('#aggregate_range').daterangepicker({
        ranges: {
            'Today': ['today', 'today'],
            'Yesterday': ['yesterday', 'yesterday'],
            'Last 7 Days': [Date.today().add({
                    days: -6
                }), 'today'],
            'Last 30 Days': [Date.today().add({
                    days: -29
                }), 'today'],
            'This Month': [Date.today().moveToFirstDayOfMonth(), Date.today().moveToLastDayOfMonth()],
            'Last Month': [Date.today().moveToFirstDayOfMonth().add({
                    months: -1
                }), Date.today().moveToFirstDayOfMonth().add({
                    days: -1
                })]
        },
        opens: (App.isRTL() ? 'right' : 'left'),
        format: 'MM/dd/yyyy',
        separator: ' to ',
        startDate: date_from,
        endDate: date_to,
        minDate: '01/01/2013',
        maxDate: '12/31/2017',
        locale: {
            applyLabel: 'Submit',
            fromLabel: 'From',
            toLabel: 'To',
            customRangeLabel: 'Custom Range',
            daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            firstDay: 1
        },
        showWeekNumbers: true,
        buttonClasses: ['btn-danger']
    },

    function (start, end) {
        App.blockUI(jQuery("#dashboard"));
        setTimeout(function () {
            App.unblockUI(jQuery("#dashboard"));
            App.scrollTo();
        }, 1000);
        $('#aggregate_range span').html(start.toString('MMMM d, yyyy') + ' - ' + end.toString('MMMM d, yyyy'));

        $('#form_dts').val(start.toString('yyyy-MM-dd'));
        $('#form_dte').val(end.toString('yyyy-MM-dd'));
        $('#filter_submit').click();


        // redirect with params
        // var query_string = '?dts=' + start.toString('yyyy-MM-dd') + '&dte=' + end.toString('yyyy-MM-dd');
        // var url = location.protocol + '//' + location.host + location.pathname + query_string;
        // window.location = url;

    });

    $('#aggregate_range span').html(date_from.toString('MMMM d, yyyy') + ' - ' + date_to.toString('MMMM d, yyyy'));
    $('#aggregate_range').show();
    // END date range
});
</script>
{% endblock %}

{% block body %}
<div class="container-fluid">
<!-- START CAMPAIGNS -->
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN PAGE TITLE & BREADCRUMB-->
            <h3 class="page-title">Call Log</h3>
            {{ flash.display_flash_messages }}
            <ul class="breadcrumb">
                <li>
                    {{ client.getName }}
                    <i class="icon-angle-right"></i>
                </li>
                <li>
                    Call Log
                </li>
                <li class="pull-right no-text-shadow">
                    <div id="aggregate_range" class="dashboard-date-range tooltips no-tooltip-on-touch-device responsive" data-tablet="" data-desktop="tooltips" data-placement="top" data-original-title="Change dashboard date range">
                        <i class="icon-calendar"></i>
                        <span>October 19, 2013 - October 26, 2013</span>
                        <i class="icon-angle-down"></i>
                    </div>
                </li>
            </ul>

            <!-- END PAGE TITLE & BREADCRUMB-->
        </div>
    </div>
    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row-fluid">
        <div class="span12">
            <div class="clearfix"></div>
            <form method="get">
                <input id="form_dts" type="hidden" name="dts" value="" />
                <input id="form_dte" type="hidden" name="dte" value="" />
                <div style="float:left; margin-left: 4px;">
                by Campaign:<br />
                <select id="filter_campaign" name="cid" class="small m-wrap" tabindex="1">
                    <option value=""></option>
                    {% for camp in campaigns %}
                        {% if camp.getID == filter.getCID %}
                        <option value="{{ camp.getID }}" selected="selected">{{ camp.getName }}</option>
                        {% else %}
                        <option value="{{ camp.getID }}">{{ camp.getName }}</option>
                        {% endif %}
                    {% endfor %}
                </select>
                </div>
                <!-- Kendrick: Adgroup will only appear once a Campaign is chosen -->
                <div id="container_adgroup" class="hidden" style="float:left; margin-left: 4px;">
                by AdGroup:<br />
                    <select id="filter_adgroup" name="agid" class="small m-wrap" tabindex="1">
                        <option value=""></option>
                    </select>
                </div>
                <!-- Kendrick: Advert will only appear once an Advert is chosen -->
                <div id="container_advert" class="hidden" style="float:left; margin-left: 4px;">
                by Advert:<br />
                    <select id="filter_advert" name="adid" class="small m-wrap" tabindex="1">
                        <option value=""></option>
                    </select>
                </div>
                <div style="float:left; margin-left: 4px;">
                by Hangup Cause:<br />
                    <select name="hcause" class="small m-wrap" tabindex="1">
                        <option value=""></option>
                        {% for cause in hangup_causes %}
                            {% if (cause == filter.getHCause) %}
                                <option value="{{ cause }}" selected="selected">{{ cause }}</option>
                            {% else %}
                                <option value="{{ cause }}">{{ cause }}</option>
                            {% endif %}
                        {% endfor %}
                    </select>
                </div>
                <div style="float:left; margin-left: 4px;">
                by Duration:<br />
                <div class="control-group">
                    <div class="controls">
                        <div class="input-prepend">
                        <!--
                            <div class="btn-group">
                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                Less Than
                                <span class="caret"></span></button>
                                <ul id="drop_durmod" class="dropdown-menu">
                                    <li><a href="#top" class="filter_durmod" data-id="less">Less Than</a></li>
                                    <li><a href="#top" class="filter_durmod" data-id="greater">Greater Than</a></li>
                                    <li><a href="#top" class="filter_durmod" data-id="equal">Equal To</a></li>
                                </ul>
                            </div>
                        -->
                            <select name="dmod" class="small m-wrap">
                                {% for val,mod in duration_mods %}
                                    {% if (val == filter.getDMod) %}
                                        <option value="{{ val }}" selected="selected">{{ mod }}</option>
                                    {% else %}
                                        <option value="{{ val }}">{{ mod }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                            <input name="dsec" class="m-wrap xsmall" type="text" placeholder="seconds" value="{{ filter.getDSec }}" />
                        </div>
                    </div>
                </div>
                </div>
                <!-- Kendrick: The number search should allow for partial matches (e.g. if I search for 1111 it will match 66821111 and 11110049)
                        It should search the caller, destination and dialled numbers 
                 -->
                <div style="float:left; margin-left: 4px;">
                by Number:<br />
                    <input name="num" type="text" class="small m-wrap" value="{{ filter.getNum }}">
                </div>
                <div style="float:left; margin: 20px 0px 0px 4px;">
                <input id="filter_submit" type="submit" class="btn green" value="Apply Filters" />
                <!-- Kendrick: "Reset" should only show if a filter has been applied -->
                {% if (filter.canReset) %}
                <a href="/client/{{ client.getID }}/call_log" class="btn red">Reset Filters</a>
                {% endif %}
                </div>
            </form>

            <div class="clearfix"></div>

            <!-- BEGIN SAMPLE TABLE PORTLET-->
            <div class="controls">
                <!-- Kendrick: Live updates should respect any filters that are set -->
                <h4>Live Updates</h4>
                <div class="portlet-body no-more-tables">
                    <table class="table-condensed cf callLog">
                        <tbody id="logbody">
                        {% for log in logs %}
                            {{ log_row.display_log(log) }}
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div>
            <button id="more_button" class="btn green">More</button>
            </div>
            <!-- END SAMPLE TABLE PORTLET-->
        </div>
    </div>
    <!-- END CAMPAIGNS -->
</div>
{% endblock %}
